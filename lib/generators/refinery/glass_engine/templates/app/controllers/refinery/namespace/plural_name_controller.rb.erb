module Refinery
  module <%= namespacing %>
    class <%= class_name.pluralize %>Controller < ::ApplicationController

      before_filter :find_all_<%= plural_name %>
      before_filter :find_page

      def index
        # you can use meta fields from your model instead (e.g. browser_title)
        # by swapping @page for @<%= singular_name %> in the line below:
        present(@page)
      end

      def show
        @<%= singular_name %> = <%= class_name %>.find(params[:id])

        # you can use meta fields from your model instead (e.g. browser_title)
        # by swapping @page for @<%= singular_name %> in the line below:
        present(@page)
      end
<% if include_form? -%>

      def new
        @<%= singular_name %> = <%= class_name %>.new
      end

      def create
        @<%= singular_name %> = <%= class_name %>.new(params[:<%= singular_name %>])

        if @<%= singular_name %>.save
          begin
            Mailer.notification(@<%= singular_name %>, request).deliver
          rescue => e
            logger.warn "There was an error delivering the <%= singular_name %> notification.\n#{e.message}\n"
          end<% if @includes_spam %> if @<%= singular_name %>.ham?<% end %>

          if <%= class_name %>.column_names.map(&:to_s).include?('email')
            begin
              Mailer.confirmation(@<%= singular_name %>, request).deliver
            rescue => e
              logger.warn "There was an error delivering the <%= singular_name %> confirmation:\n#{e.message}\n"
            end<% if @includes_spam %> if @<%= singular_name %>.ham?<% end %>
          else
            logger.warn "Please add an 'email' field to <%= class_name %> if you wish to send confirmation emails when forms are submitted."
          end

          redirect_to refinery.thank_you_<%= namespacing.underscore %>_<%= plural_name %>_path
        else
          render :action => 'new'
        end
      end
<% end -%>

    protected

      def find_all_<%= plural_name %>
        @<%= "all_" if plural_name == singular_name %><%= plural_name %> = <%= class_name %>.order('position ASC')
      end

      def find_page
        @page = ::Refinery::Page.where(:link_url => "/<%= plural_name %>").first
      end

    end
  end
end
