module Refinery
  module <%= namespacing %>
    module Admin
      class <%= class_name.pluralize %>Controller < ::Refinery::AdminController

        crudify :'refinery/<%= namespacing.underscore %>/<%= singular_name %>'<% if (title = attributes.detect { |a| a.type.to_s =~ /string|text/ }).present? and title.name != 'title' -%>,
                :title_attribute => '<%= title.name %>'<% end -%><% if plural_name == singular_name -%>,
                :redirect_to_url => :refinery_<%= namespacing.underscore %>_admin_<%= singular_name %>_index_path<% end %>,
                :searchable => false,
                :xhr_paging => true

        # NOTE: making searchable: remember to add to your model `acts_as_indexed :fields => [:title, :body]`

        # NOTE: This can be moved back into crudify (that's where it came from)
        # Returns a weighted set of results based on the query specified by the user.
        def search_all_<%= plural_name %>
          # First find normal results.
          find_all_<%= plural_name %>('')

          # Now get weighted results by running the query against the results already found.
          @<%= plural_name %> = @<%= plural_name %>.with_query('^' + params[:search].split.join(' ^'))
        end
      end
    end
  end
end
